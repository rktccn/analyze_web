import http from '../utils/https.js'


// // 获取数据
export const getOriginData = (type) => {
    return http({
        url: '/get_origin_data',
        method: 'get',
        params: {
            type
        }
    })
}
//
// // 获取热力图数据
export const getHeatMapData = (confidence, support) => {
    return http({
        url: '/get_association_data',
        method: 'get',
        params: {
            confidence,
            support
        }
    })
}
//
// // 获取散点图数据
export const getScatterData = (scatterType) => {
    console.log(scatterType)
    return http({
        url: '/get_scatter_data',
        method: 'get',
        params: {
            scatterType
        }
    })
}
//
// // 获取聚类数据
export const getClusterData = (k_value = 3, clusterType = 0, scatterType = 0) => {
    return http({
        url: '/get_cluster_data',
        method: 'get',
        params: {
            k_value,
            clusterType,
            scatterType
        }
    })
}
//
// 获取分类树
export const getTreeData = (maxDepth, minLeaf) => {
    return http({
        url: '/get_tree_data',
        method: 'get',
        params: {
            maxDepth,
            minLeaf
        }
    })
}
//
// // 获取回归
// export const getRegressionData = (type) => {
//     return http({
//         url: '',
//         method: 'get',
//         data: {
//             type
//         }
//     })
// }


// 获取数据
// export const getOriginData = async (type) => {
//     const generateColumns = (length = 10, prefix = 'column-', props) => Array.from({length}).map((_, columnIndex) => ({
//         ...props,
//         key: `${prefix}${columnIndex}`,
//         dataKey: `${prefix}${columnIndex}`,
//         title: `Column ${columnIndex}`,
//         width: 150
//     }))
//
//     const generateData = (columns, length = 200, prefix = 'row-') => Array.from({length}).map((_, rowIndex) => {
//         return columns.reduce((rowData, column, columnIndex) => {
//             rowData[column.dataKey] = `Row ${rowIndex} - Col ${columnIndex}`
//             return rowData
//         }, {
//             id: `${prefix}${rowIndex}`
//             // parentId: null
//         })
//     })
//
//     return {
//         columns: generateColumns(10), data: generateData(generateColumns(10), 200), count: 200
//     }
// }

// 获取热力图数据
// export const getHeatMapData = async () => {
//     return {
//         xAxis: ['面包', '可乐', '麦片', '牛奶', '鸡蛋'],
//         yAxis: ['面包', '可乐', '麦片', '牛奶', '鸡蛋'],
//         data: [[0, 0, 0.7777777777777778], [0, 1, 0.4444444444444444], [0, 2, 0.4444444444444444], [0, 3, 0.4444444444444444], [0, 4, 0.2222222222222222], [1, 0, 0.4444444444444444], [1, 1, 0.6666666666666666], [1, 2, 0.1111111111111111], [1, 3, 0.4444444444444444], [1, 4, 0.0], [2, 0, 0.4444444444444444], [2, 1, 0.1111111111111111], [2, 2, 0.4444444444444444], [2, 3, 0.2222222222222222], [2, 4, 0.2222222222222222], [3, 0, 0.4444444444444444], [3, 1, 0.4444444444444444], [3, 2, 0.2222222222222222], [3, 3, 0.6666666666666666], [3, 4, 0.1111111111111111], [4, 0, 0.2222222222222222], [4, 1, 0.0], [4, 2, 0.2222222222222222], [4, 3, 0.1111111111111111], [4, 4, 0.2222222222222222]]
//     }
// }

// 获取散点图数据
// export const getScatterData = async () => {
//     return {
//         data: [[[74.55, 0.44], [73.55, 0.31], [72.56, 0.09], [71.55, 0.16], [70.55, 0.23], [69.54, 0.68], [68.56, -0.02], [67.55, 0.19], [66.56, -0.22], [65.55, 0.04], [64.55, 0.26], [63.55, 0.01], [62.56, -0.21], [61.58, -0.75], [60.56, 0.04], [59.55, 0.25], [58.56, -0.1], [57.56, -0.22], [56.54, 0.27], [55.56, -0.23], [54.55, 0.02], [53.56, -0.28], [52.59, -1.03], [51.55, -0.16], [50.55, -0.27], [49.56, -0.45], [48.56, -0.44], [47.57, -0.53], [46.57, -0.65], [45.57, -0.77], [44.57, -0.76], [43.56, -0.53], [42.57, -0.77], [41.57, -0.72], [40.57, -0.95], [39.59, -1.19], [38.58, -0.91], [37.58, -1.19], [36.59, -1.52], [35.58, -1.06], [34.59, -1.29], [33.59, -1.56], [32.6, -1.69], [31.57, -1.08], [30.57, -0.89], [29.59, -1.5], [28.58, -1.27], [27.59, -1.71], [26.58, -1.34], [25.59, -1.6]], [[24.43, 2.4], [23.44, 1.92], [22.42, 2.46], [21.47, 0.95], [20.44, 1.94], [19.46, 1.37], [18.44, 1.86], [17.51, -0.17], [16.44, 1.77], [15.49, 0.49], [14.51, -0.07], [13.47, 1.03], [12.48, 0.75], [11.45, 1.43], [10.5, 0.21], [9.45, 1.39], [8.46, 0.92], [7.48, 0.52], [6.45, 1.15], [5.49, 0.2], [4.45, 1.23], [3.48, 0.5], [2.44, 1.36], [1.46, 0.97], [0.47, 0.77], [-0.54, 0.94], [-1.55, 1.33], [-2.56, 1.48], [-3.53, 0.63], [-4.48, -0.51], [-5.49, -0.37], [-6.49, -0.52], [-7.5, -0.2], [-8.55, 0.95], [-9.52, 0.09], [-10.52, 0.36], [-11.54, 0.81], [-12.52, 0.29], [-13.5, -0.36], [-14.5, -0.52], [-15.51, -0.26], [-16.52, 0.2], [-17.49, -0.53], [-18.46, -1.59], [-19.5, -0.52], [-20.5, -0.54], [-21.5, -0.55], [-22.51, -0.26], [-23.44, -1.96], [-24.49, -0.75]], [[-25.58, 1.39], [-26.54, 0.21], [-27.58, 1.51], [-28.56, 0.75], [-29.57, 1.08], [-30.61, 2.21], [-31.5, -0.99], [-32.59, 1.66], [-33.57, 0.92], [-34.59, 1.54], [-35.54, 0.2], [-36.54, 0.26], [-37.56, 0.63], [-38.52, -0.38], [-39.53, -0.19], [-40.54, 0.2], [-41.55, 0.23], [-42.61, 1.87], [-43.62, 2.04], [-44.52, -0.61], [-45.56, 0.57], [-46.51, -0.85], [-47.6, 1.63], [-48.52, -0.64], [-49.55, 0.25], [-50.56, 0.62], [-51.51, -0.89], [-52.51, -0.9], [-53.54, -0.13], [-54.55, 0.24], [-55.57, 0.63], [-56.58, 1.09], [-57.54, -0.27], [-58.51, -0.96], [-59.52, -0.72], [-60.57, 0.69], [-61.54, -0.44], [-62.53, -0.67], [-63.49, -1.48], [-64.53, -0.51], [-65.54, -0.4], [-66.52, -0.78], [-67.5, -1.47], [-68.55, -0.25], [-69.54, -0.45], [-70.52, -0.96], [-71.5, -1.46], [-72.51, -1.22], [-73.52, -1.17], [-74.49, -1.73]]]
//     }
// }

// 获取聚类数据
// export const getClusterData = async (k_value, type) => {
//     return {
//         data: [[[-24.49, -0.75], [-25.58, 1.39], [-26.54, 0.21], [-27.58, 1.51], [-28.56, 0.75], [-29.57, 1.08], [-30.61, 2.21], [-31.5, -0.99], [-32.59, 1.66], [-33.57, 0.92], [-34.59, 1.54], [-35.54, 0.2], [-36.54, 0.26], [-37.56, 0.63], [-38.52, -0.38], [-39.53, -0.19], [-40.54, 0.2], [-41.55, 0.23], [-42.61, 1.87], [-43.62, 2.04], [-44.52, -0.61], [-45.56, 0.57], [-46.51, -0.85], [-47.6, 1.63], [-48.52, -0.64], [-49.55, 0.25], [-50.56, 0.62], [-51.51, -0.89], [-52.51, -0.9], [-53.54, -0.13], [-54.55, 0.24], [-55.57, 0.63], [-56.58, 1.09], [-57.54, -0.27], [-58.51, -0.96], [-59.52, -0.72], [-60.57, 0.69], [-61.54, -0.44], [-62.53, -0.67], [-63.49, -1.48], [-64.53, -0.51], [-65.54, -0.4], [-66.52, -0.78], [-67.5, -1.47], [-68.55, -0.25], [-69.54, -0.45], [-70.52, -0.96], [-71.5, -1.46], [-72.51, -1.22], [-73.52, -1.17], [-74.49, -1.73]], [[25.59, -1.6], [24.43, 2.4], [23.44, 1.92], [22.42, 2.46], [21.47, 0.95], [20.44, 1.94], [19.46, 1.37], [18.44, 1.86], [17.51, -0.17], [16.44, 1.77], [15.49, 0.49], [14.51, -0.07], [13.47, 1.03], [12.48, 0.75], [11.45, 1.43], [10.5, 0.21], [9.45, 1.39], [8.46, 0.92], [7.48, 0.52], [6.45, 1.15], [5.49, 0.2], [4.45, 1.23], [3.48, 0.5], [2.44, 1.36], [1.46, 0.97], [0.47, 0.77], [-0.54, 0.94], [-1.55, 1.33], [-2.56, 1.48], [-3.53, 0.63], [-4.48, -0.51], [-5.49, -0.37], [-6.49, -0.52], [-7.5, -0.2], [-8.55, 0.95], [-9.52, 0.09], [-10.52, 0.36], [-11.54, 0.81], [-12.52, 0.29], [-13.5, -0.36], [-14.5, -0.52], [-15.51, -0.26], [-16.52, 0.2], [-17.49, -0.53], [-18.46, -1.59], [-19.5, -0.52], [-20.5, -0.54], [-21.5, -0.55], [-22.51, -0.26], [-23.44, -1.96]], [[74.55, 0.44], [73.55, 0.31], [72.56, 0.09], [71.55, 0.16], [70.55, 0.23], [69.54, 0.68], [68.56, -0.02], [67.55, 0.19], [66.56, -0.22], [65.55, 0.04], [64.55, 0.26], [63.55, 0.01], [62.56, -0.21], [61.58, -0.75], [60.56, 0.04], [59.55, 0.25], [58.56, -0.1], [57.56, -0.22], [56.54, 0.27], [55.56, -0.23], [54.55, 0.02], [53.56, -0.28], [52.59, -1.03], [51.55, -0.16], [50.55, -0.27], [49.56, -0.45], [48.56, -0.44], [47.57, -0.53], [46.57, -0.65], [45.57, -0.77], [44.57, -0.76], [43.56, -0.53], [42.57, -0.77], [41.57, -0.72], [40.57, -0.95], [39.59, -1.19], [38.58, -0.91], [37.58, -1.19], [36.59, -1.52], [35.58, -1.06], [34.59, -1.29], [33.59, -1.56], [32.6, -1.69], [31.57, -1.08], [30.57, -0.89], [29.59, -1.5], [28.58, -1.27], [27.59, -1.71], [26.58, -1.34]]]
//     }
// }

// 获取分类树
// export const getTreeData = async (maxDepth, minLeaf) => {
//     return {
//         data: {
//             data: {
//                 children: [
//                     {
//                         children: [
//                             {
//                                 name: "叶子节点分类-2"
//                             },
//                             {
//                                 children: [
//                                     {
//                                         name: "叶子节点分类-2"
//                                     },
//                                     {
//                                         name: "叶子节点分类-2"
//                                     }
//                                 ],
//                                 name: "分类0"
//                             }
//                         ],
//                         name: "分类3"
//                     }
//                 ],
//                 name: "root"
//             }
//         }
//     }
// }

// 获取回归
export const getRegressionData = async (type) => {
    return http({
        url: '', method: 'get', data: {
            type
        }
    })
}
